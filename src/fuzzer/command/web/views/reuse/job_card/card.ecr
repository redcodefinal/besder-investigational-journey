<script>
update = function() {
  $('#job-<%= job.uuid %>').load('/ #job-<%= job.uuid %>');
}
tick = function() {
  setInterval(update, 2000)
}
setTimeout(tick, 100);
</script>

<div class="row mt-5 w-100" id="job-<%= job.uuid %>">
  <div class="col-*-* w-100 container-fluid">
    <div class="card bg-secondary text-white container-fluid">
      <div class="card-header"><i class="fas fa-code-branch"></i>&nbsp;&nbsp;<%= job.name %></div>
      <div class="card-body">
       <div class="d-flex">

        <div class="p-2">
          <a href="#" data-toggle="tooltip" title="Target">
            <i class="fas fa-crosshairs text-white"></i>
          </a>
          &nbsp;&nbsp;<%= job.target %>
        </div>

        <div class="p-2">
          <a href="#" data-toggle="tooltip" title="Port">
            <i class="fas fa-ethernet text-white"></i>
          </a>
          &nbsp;&nbsp;<%= job.port %>
        </div>
        
        <div class="p-2">
          <a href="#" data-toggle="tooltip" title="Command Range Start">
            <i class="fas fa-sort-numeric-up text-white"></i>
          </a>
          &nbsp;&nbsp;<%= job.commands.begin %>
        </div>
        <div class="p-2">
          <a href="#" data-toggle="tooltip" title="Command Range End">
            <i class="fas fa-sort-numeric-down text-white"></i>
          </a>
          &nbsp;&nbsp;<%= job.commands.end %>
        </div>
        <div class="p-2">
          <a href="#" data-toggle="tooltip" title="Creation Time">
            <i class="fas fa-plus text-white"></i>&nbsp;<i class="fas fa-stopwatch text-white"></i>
          </a>
          <% span = (Time.now-job.create_time) %>
          &nbsp;&nbsp;<%= span.hours.to_s.rjust(2, '0') %>:<%= span.minutes.to_s.rjust(2, '0') %>:<%= span.seconds.to_s.rjust(2, '0') %>
        </div>

        <% if job.fuzzer.is_running? %>
        <div class="p-2">
          <a href="#" data-toggle="tooltip" title="Start Time">
            <i class="fas fa-play text-white"></i>&nbsp;<i class="fas fa-stopwatch text-white"></i>
          </a>
          <% span = (Time.now-job.start_time) %>
          &nbsp;&nbsp;<%= span.hours.to_s.rjust(2, '0') %>:<%= span.minutes.to_s.rjust(2, '0') %>:<%= span.seconds.to_s.rjust(2, '0') %>
        </div>
        <div class="p-2">
          <a href="#" data-toggle="tooltip" title="Good Results">
            <i class="fas fa-thumbs-up text-white"></i>
          </a>
          &nbsp;&nbsp;<%= job.fuzzer.results.select(&.good?).size %>
        </div>

        <div class="p-2">
          <a href="#" data-toggle="tooltip" title="Bad Results">
            <i class="fas fa-thumbs-down text-white"></i>
          </a>
          &nbsp;&nbsp;<%= job.fuzzer.results.select(&.bad?).size %>
        </div>
        <% end %>
      </div>

      <div class="progress" id="total_progress">
          <div class="progress-bar bg-primary" style="width:<%= (job.fuzzer.results.size.to_f/job.commands.size.to_f * 100).to_i %>%"><%= job.fuzzer.results.size %>/<%= job.commands.size %></div> 
      </div>

      <div class="progress" id="main_state">
        <% if job.started? && job.stopped? %>
          <div class="progress-bar bg-danger" style="width:100%">Cancelled</div> 
        <% else %>
          <% if job.fuzzer.state == :stopped %>
            <div class="progress-bar bg-danger" style="width:50%">Stopped</div> 
          <% elsif job.fuzzer.state == :started %>
            <div class="progress-bar bg-success" style="width:50%">Started</div> 
          <% elsif job.fuzzer.state == :finding_socket %>
            <div class="progress-bar bg-warning" style="width:50%">Finding Socket</div> 
          <% elsif job.fuzzer.state == :incrementing %>
            <div class="progress-bar bg-dark" style="width:50%">Incrementing</div> 
          <% elsif job.fuzzer.state == :waiting_for_finish %>
            <div class="progress-bar bg-warning" style="width:50%">Waiting For Finish</div> 
          <% elsif job.fuzzer.state == :making_pool %>
            <div class="progress-bar bg-warning" style="width:50%">Making Pool</div> 
          <% end %>
          <% if job.fuzzer.receiver_state == :stopped %>
            <div class="progress-bar bg-danger" style="width:50%">Stopped</div> 
          <% elsif job.fuzzer.receiver_state == :started %>
            <div class="progress-bar bg-success" style="width:50%">Started</div> 
          <% elsif job.fuzzer.receiver_state == :receiving %>
            <div class="progress-bar bg-info" style="width:50%">Receiving</div> 
          <% elsif job.fuzzer.receiver_state == :received %>
            <div class="progress-bar bg-primary" style="width:50%">Received</div> 
          <% end %>
        <% end %>
      </div> 

      <% if job.started? && !job.stopped? %>
        <div class="progress" id="socket-commands">
          <% segment_length = 100/Command::Fuzzer::POOL_MAX %>
          <% job.fuzzer.socket_pool.values.each do |socket| %>
              <div class="progress-bar bg-dark" style="width:<%= segment_length %>%"><%= socket.command %></div>
          <% end %>
        </div>
        <div class="progress" id = "socket-states">
          <% segment_length = 100/Command::Fuzzer::POOL_MAX %>
          <% job.fuzzer.socket_pool.values.each do |socket| %>
            <% if socket.state == :error %>
              <div class="progress-bar bg-danger" style="width:<%= segment_length %>%"><%= socket.state %></div>
            <% elsif [:sending, :receiving, :received, :finished, :sending_result, :logging_in, :logged_in].includes? socket.state %>
              <div class="progress-bar bg-success" style="width:<%= segment_length %>%"><%= socket.state %></div>
            <% elsif [:sending_manage_request, :receive_wait_request, :checking_down].includes? socket.state %>
              <div class="progress-bar bg-warning" style="width:<%= segment_length %>%"><%= socket.state %></div>
            <% elsif socket.state == :free %>
              <div class="progress-bar bg-info" style="width:<%= segment_length %>%"><%= socket.state %></div>              
            <% else %>
              <div class="progress-bar bg-dark" style="width:<%= segment_length %>%"><%= socket.state %></div>              
            <% end %>
          <% end %>
        </div>
        <div class="progress" id = "socket-manage-states">
            <% segment_length = 100/Command::Fuzzer::POOL_MAX %>
            <% job.fuzzer.socket_pool.values.each do |socket| %>
              <% if socket.manage_state == :error %>
                <div class="progress-bar bg-danger" style="width:<%= segment_length %>%"><%= socket.manage_state %></div>
              <% elsif [:waiting, :notify, :success].includes? socket.manage_state %>
                <div class="progress-bar bg-success" style="width:<%= segment_length %>%"><%= socket.manage_state %></div>
              <% elsif [:restart].includes? socket.manage_state %>
                <div class="progress-bar bg-warning" style="width:<%= segment_length %>%"><%= socket.manage_state %></div>             
              <% else %>
                <div class="progress-bar bg-dark" style="width:<%= segment_length %>%"><%= socket.manage_state %></div>              
              <% end %>
            <% end %>
        </div>  
      <% end %>

      <div class="card-footer">
        <div class="d-flex">
          <% if !job.started? && !job.stopped? %>
          <form action="/job/<%= job.uuid %>/start" method="get">
            <div class="p-2"><button type="submit" class="btn btn-primary"><i class="fas fa-play"></i></button></div>
          </form>
          <% elsif job.started? && !job.stopped?  %>
          <form action="/job/<%= job.uuid %>/stop" method="get">
            <div class="p-2"><button type="submit" class="btn btn-danger"><i class="fas fa-stop"></i></button></div>
          </form>
          <% end %>
          <form action="/job/<%= job.uuid %>/info" method="get">
            <div class="p-2"><button type="submit" class="btn btn-info"><i class="fas fa-info-circle"></i></button></div>
          </form>


          <div class="p-2"><button type="button" class="btn btn-dark"><i class="fas fa-cog"></i></button></div>

          <div class="ml-auto p-2"><button type="button" class="btn btn-danger"><i class="fas fa-trash"></i></button></div>
        </div>
      </div>
    </div>
  </div>
</div>